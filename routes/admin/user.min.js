'use strict';const express=require("express"),app=express(),router=express.Router(),fs=require("fs"),bcrypt=require("bcryptjs"),User=require("../../models/User"),faker=require("faker"),{isEmpty}=require("../../helpers/upload-helper");router.all("/*",(b,c,a)=>{b.app.locals.layout="admin";a()});router.get("/",(b,c)=>{User.find().then(a=>{c.render("admin/users",{users:a})})});router.get("/create",(b,c)=>{c.render("admin/users/create")});router.get("/dummy",(b,c)=>{c.render("admin/users/dummy")});
router.post("/generate-fake-users",(b,c)=>{for(let a=0;a<b.body.numbers;a++){const d=new User({fullname:faker.name.firstName()+" "+faker.name.lastName(),email:faker.internet.email(),status:"Active",role:"Subscriber",password:"secret",file:"default.png"});bcrypt.genSalt(10,(e,f)=>{bcrypt.hash("secret",f,(h,k)=>{if(h)throw h;d.password=k;d.save().then(g=>{console.log(`New User: ${g}`);b.flash("success_msg","Users created successfully :)");c.redirect("/admin/users")}).catch(g=>{console.log(`eRROR with saving dummy users: ${g}`)})})})}});
router.post("/create",(b,c)=>{let a="default.png";if(!isEmpty(b.files)){let e=b.files.file;a=Date.now()+"-"+e.name;e.mv("./public/uploads/"+a,f=>{if(f)throw f;})}const d=new User({fullname:b.body.fullname,email:b.body.email,status:b.body.status,role:b.body.role,password:b.body.password,file:a});bcrypt.genSalt(10,(e,f)=>{bcrypt.hash(b.body.password,f,(h,k)=>{if(h)throw h;d.password=k;d.save().then(g=>{console.log(`New User: ${g}`);b.flash("success_msg","User created successfully :)");c.redirect("/admin/users")}).catch(g=>
console.log(g))})})});router.get("/:id/edit",(b,c)=>{User.findOne({_id:b.params.id}).then(a=>{c.render("admin/users/edit",{user:a})}).catch(a=>console.log(a))});
router.post("/:id/update",(b,c)=>{User.findOne({_id:b.params.id}).then(a=>{let d=a.file;if(!isEmpty(b.files)){let e=b.files.file;d=Date.now()+"-"+e.name;e.mv("./public/uploads/"+d,f=>{if(f)throw f;})}"default.png"!==a.file&&""!==a.file&&fs.unlink("./public/uploads/"+a.file,e=>{if(e)throw e;});b.body.password?(a.fullname=b.body.fullname,a.email=b.body.email,a.status=b.body.status,a.role=b.body.role,a.file=d,bcrypt.genSalt(10,(e,f)=>{bcrypt.hash(b.body.password,f,(h,k)=>{if(h)throw h;a.password=k;a.save().then(g=>
{b.flash("success_msg","User updated successfully :)");c.redirect("/admin/users")}).catch(g=>console.log(`saving user with password err: ${g}`))})})):(a.fullname=b.body.fullname,a.email=b.body.email,a.status=b.body.status,a.role=b.body.role,a.file=d,a.save().then(e=>{b.flash("success_msg","User updated successfully :)");c.redirect("/admin/users")}).catch(e=>console.log(`saving user without password err: ${e}`)))}).catch(a=>console.log(`User updating pulling error: ${a}`))});
router.get("/:id/delete",(b,c)=>{User.findOne({_id:b.params.id}).then(a=>{"default.png"!==a.file&&""!==a.file&&fs.unlink("./public/uploads/"+a.file,d=>{if(d)throw d;});a.delete().then(d=>{b.flash("success_msg","User deleted successfully :)");c.redirect("/admin/users")})})});module.exports=router;