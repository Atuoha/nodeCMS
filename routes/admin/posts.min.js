'use strict';const express=require("express"),router=express.Router(),Post=require("../../models/Post"),faker=require("faker"),{isEmpty,uploadDir}=require("../../helpers/upload-helper"),path=require("path"),fs=require("fs"),Category=require("../../models/Category"),{userAuth}=require("../../helpers/authenticate");router.all("/*",(b,d,c)=>{b.app.locals.layout="admin";c()});
router.get("/",(b,d)=>{Post.find({}).populate("category").populate("user").then(c=>{d.render("admin/posts",{posts:c})}).catch(c=>console.log("Post Error: err"))});router.get("/create",(b,d)=>{Category.find().then(c=>{d.render("admin/posts/create-post",{categories:c})})});
router.post("/create",(b,d)=>{var c=[];b.body.title||c.push({message:"Please add title"});b.body.body||c.push({message:"Please add body"});b.body.sub||c.push({message:"Please add sub title"});if(0<c.length)d.render("admin/posts/create-post",{errors:c});else{c=Date.now()+"-img_place.png";isEmpty(b.files)||(file=b.files.file,c=Date.now()+"-"+file.name,file.mv("./public/uploads/"+c,e=>{if(e)throw e;}));let a=!0;a=b.body.allowComments?!0:!1;(new Post({title:b.body.title,sub:b.body.sub,status:b.body.status,
category:b.body.category,allowComments:a,file:c,body:b.body.body,user:b.user.id,date:new Date})).save().then(e=>{console.log(`Sent Post: ${e}`);b.flash("success_msg",`Post: ${e.title} has been created :)`);d.redirect("/admin/posts")}).catch(e=>console.log(e))}});router.get("/:id/edit",(b,d)=>{Post.findOne({_id:b.params.id}).then(c=>{Category.find().then(a=>{console.log(`Single post: ${c}`);d.render("admin/posts/edit",{post:c,categories:a});console.log(a)})})});
router.post("/:id/update",(b,d)=>{let c=!0;c=b.body.allowComments?!0:!1;Post.findOne({_id:b.params.id}).then(a=>{console.log(a);let e=a.file;if(!isEmpty(b.files)){let f=b.files.file;e=Date.now()+"-"+f.name;f.mv("./public/uploads/"+e,g=>{if(g)throw g;})}a.title=b.body.title;a.sub=b.body.sub;a.status=b.body.status;a.category=b.body.category;a.body=b.body.body;a.allowComments=c;a.file=e;a.user=b.user.id;a.save().then(f=>{console.log(`New Post: ${f}`);console.log("Updated Successfully");b.flash("success_msg",
`Post has successfully been updated. New title is ${f.title}`);d.redirect("/admin/posts")}).catch(f=>console.log(`Updating Error from: ${f}`))}).catch(a=>console.log(`Error from: ${a}`))});
router.get("/:id/delete",(b,d)=>{Post.findOne({_id:b.params.id}).populate("comments").then(c=>{console.log(c);"img_place.png"!==c.file&&fs.unlink("./public/uploads/"+c.file,a=>{if(a)throw a;});c.delete().then(a=>{0<a.comments.length&&a.comments.forEach(e=>{e.delete().then(f=>{console.log(`Comments Deleted ${f}`)}).catch(f=>console.log(f))});console.log(`Post Deleted: ${a}`);b.flash("success_msg",`${a.title} has been deleted without errors :)`);d.redirect("/admin/posts")}).catch(a=>console.log(`Deleting Error from: ${a}`))}).catch(c=>
console.log(`Error: ${c}`))});router.get("/dummy",(b,d)=>{d.render("admin/dummy")});
router.post("/generate-fake-posts",(b,d)=>{for(let c=0;c<b.body.number;c++){let a=new Post;a.title=faker.name.title();a.sub=faker.random.words();a.category=faker.lorem.word();a.status="public";a.allowComments=faker.random.boolean();a.body=faker.lorem.sentence();a.file="img_place.png";a.author=user.id;a.date=new Date;a.save().then(e=>{console.log(e);b.flash("success_msg",`Created ${b.body.number} dummy post(s) :)`);d.redirect("/admin/posts")}).catch(e=>console.log(e))}});module.exports=router;