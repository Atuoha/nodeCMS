'use strict';const express=require("express"),router=express.Router(),Post=require("../../models/Post"),Category=require("../../models/Category"),User=require("../../models/User"),bcrypt=require("bcryptjs"),passport=require("passport"),LocalStrategy=require("passport-local").Strategy;router.all("/*",(a,c,b)=>{a.app.locals.layout="home";b()});
router.get("/",(a,c)=>{Post.find().then(b=>{Category.find().then(d=>{c.render("home/index",{posts:b,categories:d})}).catch(d=>console.log(`Error with Categories ${d}`))}).catch(b=>console.log(b))});router.get("/single_post/:id",(a,c)=>{Post.findOne({_id:a.params.id}).then(b=>{Category.find().then(d=>{c.render("home/single_post",{post:b,categories:d})}).catch(d=>console.log(`Error with Categories ${d}`))}).catch(b=>console.log(b))});router.get("/cat/:id",(a,c)=>{});router.get("/login",(a,c)=>{c.render("home/login")});
router.get("/register",(a,c)=>{c.render("home/register")});
router.post("/register",(a,c)=>{let b=[];a.body.fullname||b.push({message:"Fullname should not be empty"});a.body.email||b.push({message:"Email should not be empty"});a.body.password||b.push({message:"Password should not be empty"});a.body.passwordConfirm||b.push({message:"Confirm Password should not be empty"});a.body.password!==a.body.passwordConfirm&&b.push({message:"Password mismatch"});0<b.length?c.render("home/register",{errors:b,fullname:a.body.fullname,email:a.body.email}):User.findOne({email:a.body.email}).then(d=>
{if(d)a.flash("error_msg",`${a.body.email} has already been registered with us`),c.redirect("/register");else{const e=new User({fullname:a.body.fullname,email:a.body.email,password:a.body.password});bcrypt.genSalt(10,(f,g)=>{bcrypt.hash(e.password,g,(l,h)=>{e.password=h;e.save().then(k=>{console.log(`New User: ${k}`);a.flash("success_msg","User Registered Successfully. Login!");c.redirect("/login")})})})}})});
passport.use(new LocalStrategy({usernameField:"email"},(a,c,b)=>{console.log(`Email: ${a} | Password: ${c}`);User.findOne({email:a}).then(d=>{if(!d)return console.log("Email not recognised!"),b(null,!1,{message:"Email not recognised!"});bcrypt.compare(c,d.password,(e,f)=>{if(e)throw e;return f?b(null,d,{message:"Logged in Successfully!"}):b(null,!1,{message:"Password mismatch. Try Again!"})})}).catch(d=>b(console.log(d)))}));
router.post("/login",(a,c,b)=>{passport.authenticate("local",{successRedirect:"/admin",failureRedirect:"/login",failureFlash:!0})(a,c,b)});module.exports=router;